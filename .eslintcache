[{"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\index.js":"1","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\App.js":"2","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\store.js":"4","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\reducers\\index.js":"5","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\routes\\Routes.js":"6","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\components\\ErrorPage.js":"7","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\sagas\\index.js":"8","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\components\\ShowComponent\\showComponent.js":"9","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\actions\\show.js":"10","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\types.js":"11","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\sagas\\showSaga.js":"12","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\reducers\\show.js":"13","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\sagas\\detailsSaga.js":"14","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\components\\DetailsComponent\\DetailsComponent.js":"15","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\reducers\\details.js":"16"},{"size":718,"mtime":1611218836945,"results":"17","hashOfConfig":"18"},{"size":266,"mtime":1611219203162,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":397,"mtime":1611249644274,"results":"21","hashOfConfig":"18"},{"size":273,"mtime":1611229216597,"results":"22","hashOfConfig":"18"},{"size":725,"mtime":1611229104119,"results":"23","hashOfConfig":"18"},{"size":108,"mtime":1611219037139,"results":"24","hashOfConfig":"18"},{"size":272,"mtime":1611229050586,"results":"25","hashOfConfig":"18"},{"size":5336,"mtime":1611244341541,"results":"26","hashOfConfig":"18"},{"size":281,"mtime":1611229475864,"results":"27","hashOfConfig":"18"},{"size":360,"mtime":1611229394299,"results":"28","hashOfConfig":"18"},{"size":1598,"mtime":1611247518071,"results":"29","hashOfConfig":"18"},{"size":704,"mtime":1611220064451,"results":"30","hashOfConfig":"18"},{"size":922,"mtime":1611247503399,"results":"31","hashOfConfig":"18"},{"size":2446,"mtime":1611245946348,"results":"32","hashOfConfig":"18"},{"size":716,"mtime":1611229432038,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"6rdebe",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\index.js",["70"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport bootstrap from \"bootstrap\";\nimport \"./sass/custom.scss\"; // import the custom sass file\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["71","72"],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\App.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\store.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\reducers\\index.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\routes\\Routes.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\components\\ErrorPage.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\sagas\\index.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\components\\ShowComponent\\showComponent.js",["73","74","75","76","77","78","79","80","81","82"],"import React, { useEffect, useState } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport { getShow } from \"../../redux/actions/show\";\r\n// import Card from \"../CardComponent\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport parse from \"html-react-parser\";\r\n\r\n//styling\r\nimport \"./showComponent.scss\";\r\n\r\nconst Show = (props) => {\r\n  const dispatch = useDispatch();\r\n  const show = useSelector((state) => state.show);\r\n  const data = useSelector((state) => state.data);\r\n  const loading = useSelector((state) => state.show.loading);\r\n  const loaded = useSelector((state) => state.show.loaded);\r\n  const error = useSelector((state) => state.show.error);\r\n\r\n  // similar to compoonentDidMount\r\n  useEffect(() => {\r\n    dispatch(getShow());\r\n  }, []);\r\n\r\n  // local state only for this component\r\n  const [currentSeason, setCurrentSeason] = useState(1);\r\n\r\n  // conditional rendering\r\n  if (show.data && show.loaded && !show.loading) {\r\n    // group episodes by season:\r\n    let episodesBySeason = parseEpisodesBySeason(show.data);\r\n\r\n    console.log(episodesBySeason);\r\n    const data = show.data;\r\n    let show_id = show.data.id;\r\n\r\n    return (\r\n      <div className=\"show-container d-flex flex-column justify-content-center align-items-center\">\r\n        <div className=\"card w-100\">\r\n          <div class=\"container\">\r\n            <div class=\"row title\">\r\n              <div class=\"col p-0\">\r\n                <div>{data.name}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row p-0.5 summary\">\r\n              <div class=\"col p-0\">\r\n                <div>{parse(data.summary)}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row p-0\">\r\n              <div class=\"w-100\"></div>\r\n              <div class=\"col-12 col-md-6 p-0\">\r\n                <img src={data.image.original} alt=\"ima\" weight={data.weight} />\r\n              </div>\r\n              <div class=\"col-12 col-md-6 p-0\">\r\n                <div className=\"info-container\">\r\n                  <div className=\"pagination-container\">\r\n                    <Pagination currentSeason={currentSeason} setCurrentSeason={setCurrentSeason} seasons={episodesBySeason} />\r\n                  </div>\r\n\r\n                  <div className=\"episode-list-container\">\r\n                    <EpisodeListBySeason show_id={show_id} season={currentSeason} episodes={episodesBySeason} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <p></p>\r\n        <p>nice loading spinner here..</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * function to group episodes by their seasons so the episodes\r\n * can be grouped and presented by their season.\r\n * @param {Object} data\r\n */\r\nfunction parseEpisodesBySeason(data) {\r\n  let episodesBySeason = data.episodes.reduce((all, elem, index) => {\r\n    let val = Object.values(elem)[3];\r\n    if (!all[val]) {\r\n      all[val] = [];\r\n    }\r\n    all[val].push(elem);\r\n    return all;\r\n  }, []);\r\n  return episodesBySeason;\r\n}\r\n\r\n/**\r\n * Functional component to render the season's episodes. The episodes have a Link to redirect the route to the Details component\r\n * @param {Object} props\r\n */\r\nconst EpisodeListBySeason = (props) => {\r\n  return props.episodes[props.season].map((elem, index) => {\r\n    return (\r\n      <div className=\"episode-list-container\" key={shortid.generate()}>\r\n        <ul className=\"\">\r\n          <li className=\"d-flex\">\r\n            <Link to={`/shows/${props.show_id}/season/${elem.season}/episode/${elem.number}`}>\r\n              <div className=\"episode\">\r\n                <b>{index + 1}.</b> {elem.name}\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\n/**\r\n * Functional component to render the pagination of the seasons, which is set dinamycally according to the\r\n * backend response. This component use and share the component's state for access and set the currentSeason.\r\n * @param {Object} props\r\n */\r\nconst Pagination = (props) => {\r\n  let totalSeasons = props.seasons.length - 1;\r\n\r\n  function handleGoToSeason(season) {\r\n    console.log(\"ive been clicked\");\r\n    if (season > 0 && season <= totalSeasons) props.setCurrentSeason(season);\r\n  }\r\n  return (\r\n    <div className=\"pagination-container\">\r\n      <div>Seasons</div>\r\n      <ul className=\"d-flex justify-content-center\">\r\n        <li className=\"page-item\" key={shortid.generate()}>\r\n          <a className=\"page-link\" onClick={() => handleGoToSeason(props.currentSeason - 1)}>\r\n            Prev\r\n          </a>\r\n        </li>\r\n        {props.seasons.map((elem, index) => {\r\n          return (\r\n            <li className=\"page-item\" key={shortid.generate()}>\r\n              <a className=\"page-link\" onClick={() => handleGoToSeason(index)}>\r\n                {index}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n        <li className=\"page-item\" key={shortid.generate()}>\r\n          <a className=\"page-link\" onClick={() => handleGoToSeason(props.currentSeason + 1)}>\r\n            Next\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\actions\\show.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\types.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\sagas\\showSaga.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\reducers\\show.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\sagas\\detailsSaga.js",[],"C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\components\\DetailsComponent\\DetailsComponent.js",["83","84","85","86"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport { getEpisodeByNumber } from \"../../redux/actions/show\";\r\nimport { Link } from \"react-router-dom\";\r\nimport parse from \"html-react-parser\";\r\n\r\n//style\r\nimport './detailsComponent.scss';\r\n\r\nexport default function DetailsComponent(props) {\r\n  const details = useSelector((state) => state.details);\r\n  const dispatch = useDispatch();\r\n\r\n  // get the url path parameters\r\n  const param1 = props.match.params.id1;\r\n  const param2 = props.match.params.id2;\r\n  const param3 = props.match.params.id3;\r\n\r\n  useEffect(() => {\r\n    let obj = {\r\n      show: param1,\r\n      season: param2,\r\n      episode: param3,\r\n    };\r\n    dispatch(getEpisodeByNumber(obj));\r\n  }, []);\r\n\r\n  console.log(\"details:\", details);\r\n\r\n  if (details.data && details.loaded && !details.loading && details.data.status != 404) {\r\n    let data = details.data;\r\n\r\n    return (\r\n      <div className=\"details-container d-flex flex-column justify-content-center align-items-center\">\r\n        <div className=\"card w-100\">\r\n          <div class=\"container\">\r\n            <div className=\"info-container\">\r\n              <div class=\"row p-0\">\r\n                <div class=\"col p-0\">\r\n                  <div className=\"title\">{data.name}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row p-0\">\r\n                <div class=\"w-100\"></div>\r\n                <div class=\"col-12 col-md-6 p-0\">\r\n                  {data.image.medium ? <img src={data.image.medium} alt=\"ima\" weight={data.weight} /> : \"No photo available..\"}\r\n                </div>\r\n                <div class=\"col-12 col-md-6 p-0\">\r\n                  <div className=\"summary\">\r\n                    <div>{details.data.summary ? parse(details.data.summary) : \"no summary available..\"}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row pt-3 pb-3\">\r\n              <Link to={`/`}>\r\n                <button type=\"button\" class=\"btn btn-secondary w-100\">\r\n                  Back\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (details.data && details.data.status === 404) {\r\n      return <p>Episode not available..</p>;\r\n    } else {\r\n      return <p>loading...</p>;\r\n    }\r\n  }\r\n}\r\n\r\n  \r\n\r\n","C:\\Users\\User\\Documents\\WebDev\\innopix\\src\\redux\\reducers\\details.js",[],{"ruleId":"87","severity":1,"message":"88","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":17},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"87","severity":1,"message":"95","line":3,"column":36,"nodeType":"89","messageId":"90","endLine":3,"endColumn":48},{"ruleId":"87","severity":1,"message":"96","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":16},{"ruleId":"87","severity":1,"message":"97","line":16,"column":9,"nodeType":"89","messageId":"90","endLine":16,"endColumn":13},{"ruleId":"87","severity":1,"message":"98","line":17,"column":9,"nodeType":"89","messageId":"90","endLine":17,"endColumn":16},{"ruleId":"87","severity":1,"message":"99","line":18,"column":9,"nodeType":"89","messageId":"90","endLine":18,"endColumn":15},{"ruleId":"87","severity":1,"message":"100","line":19,"column":9,"nodeType":"89","messageId":"90","endLine":19,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":24,"column":6,"nodeType":"103","endLine":24,"endColumn":8,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":139,"column":11,"nodeType":"107","endLine":139,"endColumn":94},{"ruleId":"105","severity":1,"message":"106","line":146,"column":15,"nodeType":"107","endLine":146,"endColumn":80},{"ruleId":"105","severity":1,"message":"106","line":153,"column":11,"nodeType":"107","endLine":153,"endColumn":94},{"ruleId":"87","severity":1,"message":"108","line":1,"column":28,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"95","line":2,"column":36,"nodeType":"89","messageId":"90","endLine":2,"endColumn":48},{"ruleId":"101","severity":1,"message":"109","line":26,"column":6,"nodeType":"103","endLine":26,"endColumn":8,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":30,"column":81,"nodeType":"113","messageId":"114","endLine":30,"endColumn":83},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["115"],"no-negated-in-lhs",["116"],"'shallowEqual' is defined but never used.","'render' is defined but never used.","'data' is assigned a value but never used.","'loading' is assigned a value but never used.","'loaded' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["117"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'param1', 'param2', and 'param3'. Either include them or remove the dependency array.",["118"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [dispatch]",{"range":"123","text":"124"},"Update the dependencies array to be: [dispatch, param1, param2, param3]",{"range":"125","text":"126"},[868,870],"[dispatch]",[785,787],"[dispatch, param1, param2, param3]"]